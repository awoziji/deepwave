#AUTOGENERATED! DO NOT EDIT! File to edit: dev/00_preprocessing.ipynb (unless otherwise specified).

__all__ = ['TimeSerie']

#Cell
class TimeSerie:
    "Estructura de datos que almacena las mediciones en una estacion."

    @staticmethod
    def __process_time(time):
        match = re.match(r"(?P<val>\d+)(?P<smh>[smh]*)$", time, re.I)
        assert match, "Formato incorrecto de tamaño de ventana o paso."

        result = int(match.group("val"))
        if match.group("smh").lower() == "m":
            result *= 60
        elif match.group("smh").lower() == "h":
            result *= 60*60
        return result


    def __init__(self, window_size:str="2m", step:str="30s", freq:int=50):
        "El formato de `window_size` y `step` es \d+[smh]"
        "`window_size` representa el tamaño de tiempo en que sera cortada la serie de tiempo"
        "`step` representa el tamaño de paso que se utiliza al cortar la serie de tiempo"
        "`freq` es la frecuencia en Hz que tienen las mediciones"

        self.window_size = self.__process_time(window_size)
        self.step = self.__process_time(step)

        assert type(freq) is int, "La frecuencia debe ser un entero."
        assert freq > 0 and freq <= 500, "La frecuencia debe definirse entre 1 y 500 Hz"
        self.freq = freq

    def __repr__(self):
        return f"window_size {self.window_size}\nstep {self.step}\nfreq {self.freq}"

    def __str__(self):
        return f"window_size {self.window_size}\nstep {self.step}\nfreq {self.freq}"